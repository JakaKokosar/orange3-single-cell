# Python package
# Create and test a Python package on multiple Python versions and systems.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Linux'
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 2

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install -r requirements.txt && pip install PyQt5
    displayName: 'Install dependencies'
    
  - script: pip install -v .
    displayName: 'Install add-on'
    
  - script: |
      pip install pytest
      pip install pytest-cov
      cd orangecontrib/single_cell/
      pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
    
- job: 'MacOS'
  pool:
    vmImage: 'macos-10.13'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 2

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install -U pip setuptools wheel sphinx recommonmark && pip install -r requirements.txt && pip install PyQt5
    displayName: 'Install dependencies'
    
  - script: cd doc && make htmlhelp
    displayName: 'Build docs'
    continueOnError: false

  - script: python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv
    displayName: 'Install add-on'
    continueOnError: false
    
  - script: |
      pip list
      which pip
      which python
    displayName: 'sanity check'

  - script: |
      pip install pytest
      pip install pytest-cov
      cd orangecontrib/single_cell/
      pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
    
    
- job: 'Windows'
  pool:
    vmImage: 'macos-10.13'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 2

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install -r requirements.txt && pip install PyQt5
    displayName: 'Install dependencies'

  - script: pip install -v .
    displayName: 'Install add-on'

  - script: |
      pip install pytest
      pip install pytest-cov
      cd orangecontrib/single_cell/
      pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

